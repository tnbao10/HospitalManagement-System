package com.demo.entities;
// Generated Jan 1, 2025, 10:28:01â€¯PM by Hibernate Tools 4.3.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import static jakarta.persistence.GenerationType.IDENTITY;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;

/**
 * Account generated by hbm2java
 */
@Entity
@Table(name = "account")
public class Account implements java.io.Serializable {

	private Integer id;
	private Faculty faculty;
	private Role role;
	private String email;
	private String password;
	private String fullName;
	private Date dob;
	private String phone;
	private String address;
	private String description;
	private String photo;

	private Set<Appointment> appointmentsForDoctorId = new HashSet<Appointment>(0);
	private Set<Appointment> appointmentsForPatientId = new HashSet<Appointment>(0);

	public Account() {
	}

	public Account(Role role, String email, String password, String fullName, Date dob, String phone, String address, String description, String photo) {
		this.role = role;
		this.email = email;
		this.password = password;
		this.fullName = fullName;
		this.dob = dob;
		this.phone = phone;
		this.address = address;
		this.description = description;
		this.photo = photo;
	}

	public Account(Faculty faculty, Role role, String email, String password, String fullName, Date dob, String phone, String address, String description,String photo,
			Set<Appointment> appointmentsForDoctorId, Set<Appointment> appointmentsForPatientId) {
		this.faculty = faculty;
		this.role = role;
		this.email = email;
		this.password = password;
		this.fullName = fullName;
		this.dob = dob;
		this.phone = phone;
		this.address = address;
		this.description = description;
		this.photo = photo;
		this.appointmentsForDoctorId = appointmentsForDoctorId;
		this.appointmentsForPatientId = appointmentsForPatientId;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "Id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FacultyId")
	public Faculty getFaculty() {
		return this.faculty;
	}

	public void setFaculty(Faculty faculty) {
		this.faculty = faculty;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RoleId", nullable = false)
	public Role getRole() {
		return this.role;
	}

	public void setRole(Role role) {
		this.role = role;
	}

	@Column(name = "Email", nullable = false, length = 250)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "Password", nullable = false, length = 250)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "FullName", nullable = false, length = 250)
	public String getFullName() {
		return this.fullName;
	}

	public void setFullName(String fullName) {
		this.fullName = fullName;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "Dob", nullable = false, length = 10)
	public Date getDob() {
		return this.dob;
	}

	public void setDob(Date dob) {
		this.dob = dob;
	}
	
	@Column(name = "Phone", nullable = true, length = 50)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}
	
	@Column(name = "Address", nullable = true, length = 50)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}
	
	@Column(name = "Description", nullable = true, length = 255)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}
	
	@Column(name = "Photo", nullable = true, length = 255)
	public String getPhoto() {
		return this.photo;
	}

	public void setPhoto(String photo) {
		this.photo = photo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "accountByDoctorId")
	public Set<Appointment> getAppointmentsForDoctorId() {
		return this.appointmentsForDoctorId;
	}

	public void setAppointmentsForDoctorId(Set<Appointment> appointmentsForDoctorId) {
		this.appointmentsForDoctorId = appointmentsForDoctorId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "accountByPatientId")
	public Set<Appointment> getAppointmentsForPatientId() {
		return this.appointmentsForPatientId;
	}

	public void setAppointmentsForPatientId(Set<Appointment> appointmentsForPatientId) {
		this.appointmentsForPatientId = appointmentsForPatientId;
	}

}
